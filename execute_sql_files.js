const fs = require('fs');
const path = require('path');

async function executeSqlFile(filename) {
  try {
    console.log(`–ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª: ${filename}`);
    const sqlContent = fs.readFileSync(filename, 'utf8');
    
    console.log(`–û—Ç–ø—Ä–∞–≤–ª—è–µ–º SQL –≤ API...`);
    const response = await fetch('http://localhost:3000/api/admin/execute-sql-direct', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ sql: sqlContent })
    });

    const result = await response.json();
    
    if (result.success) {
      console.log(`‚úÖ ${filename} –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ`);
      console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç:`, result.message);
    } else {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ ${filename}:`, result.error);
    }
    
    return result;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è ${filename}:`, error.message);
    return { success: false, error: error.message };
  }
}

async function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL —Ñ–∞–π–ª–æ–≤...\n');
  
  const files = [
    'create_receipts_direct.sql',
    'create_receipts_direct_part2.sql', 
    'create_receipts_direct_part3.sql'
  ];

  for (const file of files) {
    if (fs.existsSync(file)) {
      console.log(`\nüìÅ –í—ã–ø–æ–ª–Ω—è–µ–º ${file}...`);
      await executeSqlFile(file);
      // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Ñ–∞–π–ª–∞–º–∏
      await new Promise(resolve => setTimeout(resolve, 1000));
    } else {
      console.log(`‚ö†Ô∏è  –§–∞–π–ª ${file} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
  }

  console.log('\n‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
}

main().catch(console.error);
