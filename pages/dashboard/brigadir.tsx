import { useState, useEffect } from 'react';
import PageHeader from '../../components/PageHeader';

interface ProductionReceipt {
  id: string;
  produced_at: string;
  total_earnings: number;
  total_weight: number;
  items: {
    qty: number;
    product: {
      name: string;
    };
  }[];
}

export default function BrigadirDashboard() {
  const [todayReceipts, setTodayReceipts] = useState<ProductionReceipt[]>([]);
  const [weekReceipts, setWeekReceipts] = useState<ProductionReceipt[]>([]);
  const [monthReceipts, setMonthReceipts] = useState<ProductionReceipt[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    loadDashboardData();
  }, []);

  // –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
  useEffect(() => {
    const handleVisibilityChange = () => {
      if (!document.hidden) {
        loadDashboardData();
      }
    };

    const handleFocus = () => {
      loadDashboardData();
    };

    document.addEventListener('visibilitychange', handleVisibilityChange);
    window.addEventListener('focus', handleFocus);
    
    return () => {
      document.removeEventListener('visibilitychange', handleVisibilityChange);
      window.removeEventListener('focus', handleFocus);
    };
  }, []);

  const loadDashboardData = async () => {
    try {
      setLoading(true);
      
      const today = new Date().toISOString().split('T')[0];
      const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];
      const monthAgo = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];

      const [todayRes, weekRes, monthRes] = await Promise.all([
        fetch(`/api/production?produced_by=current-user-id&date_from=${today}&limit=1000`),
        fetch(`/api/production?produced_by=current-user-id&date_from=${weekAgo}&limit=1000`),
        fetch(`/api/production?produced_by=current-user-id&date_from=${monthAgo}&limit=1000`)
      ]);

      const todayData = await todayRes.json();
      const weekData = await weekRes.json();
      const monthData = await monthRes.json();

      if (todayData.receipts) setTodayReceipts(todayData.receipts);
      if (weekData.receipts) setWeekReceipts(weekData.receipts);
      if (monthData.receipts) setMonthReceipts(monthData.receipts);

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–∞—à–±–æ—Ä–¥–∞:', error);
    } finally {
      setLoading(false);
    }
  };

  const calculateStats = (receipts: ProductionReceipt[]) => {
    const totalItems = receipts.reduce((sum, receipt) => 
      sum + receipt.items.reduce((itemSum, item) => itemSum + item.qty, 0), 0
    );
    const totalEarnings = receipts.reduce((sum, receipt) => sum + receipt.total_earnings, 0);
    const totalWeight = receipts.reduce((sum, receipt) => sum + receipt.total_weight, 0);

    return { totalItems, totalEarnings, totalWeight };
  };

  const todayStats = calculateStats(todayReceipts);
  const weekStats = calculateStats(weekReceipts);
  const monthStats = calculateStats(monthReceipts);

  if (loading) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="text-gray-500">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      <PageHeader
        title="–î–∞—à–±–æ—Ä–¥ –±—Ä–∏–≥–∞–¥–∏—Ä–∞"
        showBackButton
      />
      
      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div className="p-6">
          <h3 className="text-lg text-gray-700 mb-4">–°–µ–≥–æ–¥–Ω—è</h3>
          <div className="space-y-2">
            <div className="flex items-center">
              <span className="text-2xl">üìÖ</span>
              <div className="ml-3">
                <p className="text-2xl font-bold text-gray-900">{todayStats.totalItems}</p>
                <p className="text-sm text-gray-500">{todayStats.totalWeight.toFixed(1)} –∫–≥ ‚Ä¢ {todayStats.totalEarnings.toFixed(0)} ‚ÇΩ</p>
              </div>
            </div>
          </div>
        </div>

        <div className="p-6">
          <h3 className="text-lg text-gray-700 mb-4">–ó–∞ –Ω–µ–¥–µ–ª—é</h3>
          <div className="space-y-2">
            <div className="flex items-center">
              <span className="text-2xl">üìà</span>
              <div className="ml-3">
                <p className="text-2xl font-bold text-gray-900">{weekStats.totalItems}</p>
                <p className="text-sm text-gray-500">{weekStats.totalWeight.toFixed(1)} –∫–≥ ‚Ä¢ {weekStats.totalEarnings.toFixed(0)} ‚ÇΩ</p>
              </div>
            </div>
          </div>
        </div>

        <div className="p-6">
          <h3 className="text-lg text-gray-700 mb-4">–ó–∞ –º–µ—Å—è—Ü</h3>
          <div className="space-y-2">
            <div className="flex items-center">
              <span className="text-2xl">üèÜ</span>
              <div className="ml-3">
                <p className="text-2xl font-bold text-gray-900">{monthStats.totalItems}</p>
                <p className="text-sm text-gray-500">{monthStats.totalWeight.toFixed(1)} –∫–≥ ‚Ä¢ {monthStats.totalEarnings.toFixed(0)} ‚ÇΩ</p>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è */}
      <div className="">
        <div className="p-6">
          <h3 className="text-lg text-gray-700 mb-4">–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è</h3>
          
          {todayReceipts.length === 0 ? (
            <p className="text-gray-500 text-center py-8">–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
          ) : (
            <div className="overflow-x-auto">
              <table className="min-w-full divide-y divide-gray-200">
                <thead className="bg-gray-50">
                  <tr>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      –ù–æ–º–µ—Ä
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      –ï–¥–∏–Ω–∏—Ü –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      –û–±—â–∏–π –≤–µ—Å
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      –ó–∞—Ä–∞–±–æ—Ç–æ–∫
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      –ü—Ä–∏–Ω—è–ª –∫–ª–∞–¥–æ–≤—â–∏–∫
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      –î–∞—Ç–∞
                    </th>
                  </tr>
                </thead>
                <tbody className="bg-white divide-y divide-gray-200">
                  {todayReceipts.slice(0, 10).map((receipt) => (
                    <tr key={receipt.id}>
                      <td className="p-1 whitespace-nowrap text-sm text-gray-700">
                        {receipt.id}
                      </td>
                      <td className="p-1 whitespace-nowrap text-sm text-gray-500">
                        {receipt.items.reduce((sum, item) => sum + item.qty, 0)}
                      </td>
                      <td className="p-1 whitespace-nowrap text-sm text-gray-500">
                        {receipt.total_weight.toFixed(1)} –∫–≥
                      </td>
                      <td className="p-1 whitespace-nowrap text-sm text-gray-500">
                        {receipt.total_earnings.toFixed(0)} ‚ÇΩ
                      </td>
                      <td className="p-1 whitespace-nowrap text-sm text-gray-500">
                        {/* –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∏–º—è –∫–ª–∞–¥–æ–≤—â–∏–∫–∞ */}
                        -
                      </td>
                      <td className="p-1 whitespace-nowrap text-sm text-gray-500">
                        {new Date(receipt.produced_at).toLocaleDateString('ru-RU')}
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          )}
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –±–ª–æ–∫–∏ */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div className="p-6">
          <h3 className="text-lg text-gray-700 mb-4">üí∞ –ö–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∑–∞—Ä–∞–±–æ—Ç–æ–∫</h3>
          <p className="text-sm text-gray-600">
            –í–∞—à –∑–∞—Ä–∞–±–æ—Ç–æ–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø–æ —Å–¥–µ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ. 
            –ó–∞ –∫–∞–∂–¥—É—é –µ–¥–∏–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —Ä–∞—Å—Ü–µ–Ω–∫—É, 
            —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π. –°—É–º–º–∞ 
            –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ —Ç–æ–≤–∞—Ä–∞ –∫–ª–∞–¥–æ–≤—â–∏–∫–æ–º.
          </p>
        </div>

        <div className="p-6">
          <h3 className="text-lg text-gray-700 mb-4">üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã</h3>
          <p className="text-sm text-gray-600">
            –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Ä–∞—Å—Ü–µ–Ω–æ–∫ –∏ –æ–ø–ª–∞—Ç—ã –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ 
            –∑–∞–≤–µ–¥—É—é—â–µ–º—É –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º –∏–ª–∏ –≤ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—é. –í—Å–µ 
            –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è –≤ 
            —Å–∏—Å—Ç–µ–º–µ –¥–ª—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–≥–æ —É—á–µ—Ç–∞.
          </p>
        </div>
      </div>
    </div>
  );
} 