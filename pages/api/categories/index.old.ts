import { NextApiRequest, NextApiResponse } from 'next';
import { supabaseAdmin } from '../../../lib/supabaseAdmin';

type Category = {
  id: number;
  name: string;
};

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method === 'GET') {
    try {
      // üöÄ –ö–≠–®–ò–†–û–í–ê–ù–ò–ï –¥–ª—è —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ - –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–µ–¥–∫–æ –∏–∑–º–µ–Ω—è—é—Ç—Å—è
      res.setHeader('Cache-Control', 'public, max-age=3600, stale-while-revalidate=86400');
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      const { data: categories, error } = await supabaseAdmin
        .from('categories')
        .select('id, name')
        .order('name');

      if (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
        return res.status(500).json({ error: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π' });
      }

      return res.status(200).json(categories || []);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error);
      return res.status(500).json({ error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
    }
  }

  return res.status(405).json({ error: '–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è' });
} 