import { NextApiRequest, NextApiResponse } from 'next';
import { withPermissions, RoleChecks } from '../../../lib/api/roleAuth';
import { 
  getApiRoutingConfig, 
  updateRolloutPercentage, 
  toggleOptimizedApi 
} from '../../../lib/apiRouter';

/**
 * üîÑ API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª–ª–∞—É—Ç–æ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö API
 * –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
 */
async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method === 'GET') {
    // –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Ä–æ—É—Ç–∏–Ω–≥–∞
    try {
      const config = getApiRoutingConfig();
      return res.status(200).json({
        routes: config,
        timestamp: new Date().toISOString()
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ä–æ—É—Ç–∏–Ω–≥–∞:', error);
      return res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
    }
  }

  if (req.method === 'POST') {
    // –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Ä–æ—É—Ç–∏–Ω–≥–∞
    try {
      const { action, path, percentage, enabled } = req.body;

      if (!action || !path) {
        return res.status(400).json({ 
          error: '–¢—Ä–µ–±—É—é—Ç—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã action –∏ path' 
        });
      }

      let success = false;

      switch (action) {
        case 'updatePercentage':
          if (typeof percentage !== 'number') {
            return res.status(400).json({ 
              error: '–ü–∞—Ä–∞–º–µ—Ç—Ä percentage –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º' 
            });
          }
          success = updateRolloutPercentage(path, percentage);
          break;

        case 'toggle':
          if (typeof enabled !== 'boolean') {
            return res.status(400).json({ 
              error: '–ü–∞—Ä–∞–º–µ—Ç—Ä enabled –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å boolean' 
            });
          }
          success = toggleOptimizedApi(path, enabled);
          break;

        default:
          return res.status(400).json({ 
            error: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. –î–æ—Å—Ç—É–ø–Ω—ã: updatePercentage, toggle' 
          });
      }

      if (!success) {
        return res.status(404).json({ 
          error: 'API –º–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω' 
        });
      }

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
      const config = getApiRoutingConfig();
      return res.status(200).json({
        success: true,
        message: `–î–µ–π—Å—Ç–≤–∏–µ ${action} –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ`,
        routes: config
      });

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ä–æ—É—Ç–∏–Ω–≥–∞:', error);
      return res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
    }
  }

  return res.status(405).json({ error: '–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è' });
}

export default withPermissions(
  RoleChecks.canManageSystem,
  '–î–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é API —Ä–æ—É—Ç–∏–Ω–≥–æ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏'
)(handler);
