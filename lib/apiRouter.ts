/**
 * üîÑ –°–∏—Å—Ç–µ–º–∞ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–π –∑–∞–º–µ–Ω—ã API –Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–ª–∞–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥
 */

interface ApiRoute {
  original: string;
  optimized: string;
  rolloutPercentage: number; // 0-100
  enabled: boolean;
}

const API_ROUTES: ApiRoute[] = [
  {
    original: '/api/products',
    optimized: '/api/optimized/products-search',
    rolloutPercentage: 0, // –ù–∞—á–∏–Ω–∞–µ–º —Å 0%
    enabled: false
  },
  {
    original: '/api/stock',
    optimized: '/api/optimized/stock', 
    rolloutPercentage: 0,
    enabled: false
  },
  {
    original: '/api/realization',
    optimized: '/api/optimized/realization',
    rolloutPercentage: 0,
    enabled: false
  }
];

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫—É—é –≤–µ—Ä—Å–∏—é API –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
 */
export function shouldUseOptimizedApi(originalPath: string, userId?: number): boolean {
  const route = API_ROUTES.find(r => r.original === originalPath);
  
  if (!route || !route.enabled) {
    return false;
  }

  // –ï—Å–ª–∏ 100% - –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
  if (route.rolloutPercentage >= 100) {
    return true;
  }

  // –ï—Å–ª–∏ 0% - –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é
  if (route.rolloutPercentage <= 0) {
    return false;
  }

  // –î–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–±–æ—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ userId –∏–ª–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞
  const seed = userId || Math.floor(Math.random() * 1000);
  return (seed % 100) < route.rolloutPercentage;
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—É—Ç—å –¥–ª—è API
 */
export function getOptimizedApiPath(originalPath: string): string | null {
  const route = API_ROUTES.find(r => r.original === originalPath);
  return route?.optimized || null;
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Ä–æ—É—Ç–∏–Ω–≥–∞
 */
export function getApiRoutingConfig(): ApiRoute[] {
  return [...API_ROUTES];
}

/**
 * –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç —Ä–æ–ª–ª–∞—É—Ç–∞ –¥–ª—è API
 */
export function updateRolloutPercentage(originalPath: string, percentage: number): boolean {
  const route = API_ROUTES.find(r => r.original === originalPath);
  if (!route) return false;

  route.rolloutPercentage = Math.max(0, Math.min(100, percentage));
  return true;
}

/**
 * –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π API
 */
export function toggleOptimizedApi(originalPath: string, enabled: boolean): boolean {
  const route = API_ROUTES.find(r => r.original === originalPath);
  if (!route) return false;

  route.enabled = enabled;
  return true;
}

/**
 * Middleware –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–æ—É—Ç–∏–Ω–≥–∞
 */
export function withApiRouting(handler: Function, originalPath: string) {
  return async (req: any, res: any) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
    const userId = req.cookies?.user_id ? parseInt(req.cookies.user_id) : undefined;
    const useOptimized = shouldUseOptimizedApi(originalPath, userId);

    if (useOptimized) {
      // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
      res.setHeader('X-API-Version', 'optimized');
      
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
      // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ø–æ–º–µ—á–∞–µ–º –∑–∞–ø—Ä–æ—Å
      req.isOptimizedVersion = true;
    } else {
      res.setHeader('X-API-Version', 'original');
      req.isOptimizedVersion = false;
    }

    return handler(req, res);
  };
}
