require('dotenv').config({ path: '.env.local' });
const { createClient } = require('@supabase/supabase-js');

async function testDatabaseFixes() {
  const supabase = createClient(
    process.env.NEXT_PUBLIC_SUPABASE_URL,
    process.env.SUPABASE_SERVICE_ROLE_KEY
  );

  console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ë–ê–ó–´ –î–ê–ù–ù–´–•\n');

  let allTestsPassed = true;

  // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ receipt_id –≤ receipt_items
  console.log('1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ receipt_id –≤ receipt_items...');
  try {
    const { data: receiptItems, error } = await supabase
      .from('receipt_items')
      .select('id, receipt_id, created_at, receipt:receipts(id, created_at)')
      .not('receipt_id', 'is', null)
      .limit(10);

    if (error) {
      console.log('   ‚ùå –û—à–∏–±–∫–∞:', error.message);
      allTestsPassed = false;
    } else if (!receiptItems || receiptItems.length === 0) {
      console.log('   ‚ö†Ô∏è  –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π —Å receipt_id');
    } else {
      console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${receiptItems.length} –∑–∞–ø–∏—Å–µ–π —Å receipt_id`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Å–≤—è–∑—ã–≤–∞–Ω–∏—è
      let correctLinks = 0;
      receiptItems.forEach(item => {
        if (item.receipt && item.receipt.created_at) {
          const timeDiff = Math.abs(
            new Date(item.created_at).getTime() - new Date(item.receipt.created_at).getTime()
          );
          if (timeDiff < 60000) { // –í –ø—Ä–µ–¥–µ–ª–∞—Ö 60 —Å–µ–∫—É–Ω–¥
            correctLinks++;
          }
        }
      });
      
      const accuracy = (correctLinks / receiptItems.length) * 100;
      console.log(`   üìä –¢–æ—á–Ω–æ—Å—Ç—å —Å–≤—è–∑—ã–≤–∞–Ω–∏—è: ${accuracy.toFixed(1)}%`);
      
      if (accuracy < 90) {
        console.log('   ‚ö†Ô∏è  –ù–∏–∑–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å —Å–≤—è–∑—ã–≤–∞–Ω–∏—è');
        allTestsPassed = false;
      }
    }
  } catch (error) {
    console.log('   ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    allTestsPassed = false;
  }

  // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ realization_id –≤ realization_items
  console.log('\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ realization_id –≤ realization_items...');
  try {
    const { data: realizationItems, error } = await supabase
      .from('realization_items')
      .select('id, realization_id, created_at, realization:realization(id, created_at)')
      .not('realization_id', 'is', null)
      .limit(10);

    if (error) {
      console.log('   ‚ùå –û—à–∏–±–∫–∞:', error.message);
      allTestsPassed = false;
    } else if (!realizationItems || realizationItems.length === 0) {
      console.log('   ‚ö†Ô∏è  –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π —Å realization_id');
    } else {
      console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${realizationItems.length} –∑–∞–ø–∏—Å–µ–π —Å realization_id`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Å–≤—è–∑—ã–≤–∞–Ω–∏—è
      let correctLinks = 0;
      realizationItems.forEach(item => {
        if (item.realization && item.realization.created_at) {
          const timeDiff = Math.abs(
            new Date(item.created_at).getTime() - new Date(item.realization.created_at).getTime()
          );
          if (timeDiff < 60000) { // –í –ø—Ä–µ–¥–µ–ª–∞—Ö 60 —Å–µ–∫—É–Ω–¥
            correctLinks++;
          }
        }
      });
      
      const accuracy = (correctLinks / realizationItems.length) * 100;
      console.log(`   üìä –¢–æ—á–Ω–æ—Å—Ç—å —Å–≤—è–∑—ã–≤–∞–Ω–∏—è: ${accuracy.toFixed(1)}%`);
      
      if (accuracy < 90) {
        console.log('   ‚ö†Ô∏è  –ù–∏–∑–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å —Å–≤—è–∑—ã–≤–∞–Ω–∏—è');
        allTestsPassed = false;
      }
    }
  } catch (error) {
    console.log('   ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    allTestsPassed = false;
  }

  // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–æ–≤
  console.log('\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤...');
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞ —Å –∏–Ω–¥–µ–∫—Å–æ–º
    const startTime = Date.now();
    const { data: receiptItemsWithIndex, error: indexError } = await supabase
      .from('receipt_items')
      .select('id, product_id, size_code')
      .eq('product_id', 1)
      .limit(100);
    const endTime = Date.now();
    
    if (indexError) {
      console.log('   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å –∏–Ω–¥–µ–∫—Å–æ–º:', indexError.message);
      allTestsPassed = false;
    } else {
      console.log(`   ‚úÖ –ó–∞–ø—Ä–æ—Å —Å –∏–Ω–¥–µ–∫—Å–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞ ${endTime - startTime}ms`);
      console.log(`   üìä –ù–∞–π–¥–µ–Ω–æ ${receiptItemsWithIndex?.length || 0} –∑–∞–ø–∏—Å–µ–π`);
    }
  } catch (error) {
    console.log('   ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    allTestsPassed = false;
  }

  // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
  console.log('\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö...');
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ receipt_items –∏–º–µ—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π receipt_id
    const { data: orphanedReceiptItems, error: orphanError } = await supabase
      .from('receipt_items')
      .select('id, receipt_id')
      .not('receipt_id', 'is', null)
      .is('receipt_id', null);

    if (orphanError) {
      console.log('   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏:', orphanError.message);
      allTestsPassed = false;
    } else if (orphanedReceiptItems && orphanedReceiptItems.length > 0) {
      console.log(`   ‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ ${orphanedReceiptItems.length} –∑–∞–ø–∏—Å–µ–π –±–µ–∑ receipt_id`);
      allTestsPassed = false;
    } else {
      console.log('   ‚úÖ –í—Å–µ –∑–∞–ø–∏—Å–∏ –∏–º–µ—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π receipt_id');
    }
  } catch (error) {
    console.log('   ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    allTestsPassed = false;
  }

  // –¢–µ—Å—Ç 5: –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å API
  console.log('\n5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ API...');
  try {
    const startTime = Date.now();
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å–∫–ª–∞–¥–∞
    const { data: stockData, error: stockError } = await supabase
      .from('receipt_items')
      .select(`
        qty,
        size_code,
        product_id,
        receipt_id,
        product:products!receipt_items_product_id_fkey(
          id,
          name,
          article,
          brand:brands!products_brand_id_fkey(name)
        )
      `)
      .limit(50);
    
    const endTime = Date.now();
    
    if (stockError) {
      console.log('   ‚ùå –û—à–∏–±–∫–∞ API —Å–∫–ª–∞–¥–∞:', stockError.message);
      allTestsPassed = false;
    } else {
      console.log(`   ‚úÖ API —Å–∫–ª–∞–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞ ${endTime - startTime}ms`);
      console.log(`   üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${stockData?.length || 0} –∑–∞–ø–∏—Å–µ–π`);
      
      if (endTime - startTime > 1000) {
        console.log('   ‚ö†Ô∏è  –ú–µ–¥–ª–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å (>1000ms)');
        allTestsPassed = false;
      }
    }
  } catch (error) {
    console.log('   ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    allTestsPassed = false;
  }

  // –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  console.log('\n' + '='.repeat(50));
  if (allTestsPassed) {
    console.log('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!');
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é');
    console.log('üöÄ –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ API');
  } else {
    console.log('‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´');
    console.log('‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞');
    console.log('üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π');
  }
  console.log('='.repeat(50));
}

testDatabaseFixes().catch(console.error);
